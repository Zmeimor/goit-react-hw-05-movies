{"version":3,"file":"static/js/215.c84cfcae.chunk.js","mappings":"+SAEMA,EAAO,gCACPC,EAAM,4CACNC,EAAO,kBAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAMJ,EAAO,mBAAqBC,GADpD,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAKR,EAAMC,GADrD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,wFACkBV,EAAAA,EAAAA,GACrBJ,EACE,eACAC,EACAC,EACA,WACAY,EACA,+BARC,cACCT,EADD,yBAWEA,EAASC,KAAKC,SAXhB,kE,4ECxBMQ,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAEC,SAAU,QAASC,IAAK,MAAOC,KAAM,OACrDC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,WAGvB,C,iJChBYC,E,OAAeC,GAAAA,IAAH,2I,kBCqDzB,MAhDA,WACE,IAAQrB,GAAOsB,EAAAA,EAAAA,MAAPtB,GACR,GAA4BuB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,MAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAU,mCAAG,oFACnB,IAEA,WAAA9B,EAAAA,EAAAA,IAAUH,UAAV,SAAekC,KAAKT,EAKnB,CAJA,MAAOU,GACRN,EAAWM,EAAMC,QAChB,CALD,QAMAT,GAAc,EACb,CARkB,2CAAH,qDAWhB,OADAM,IACO,WACLF,EAAgBM,OACjB,CACF,GAAE,CAACrC,KAGF,UAACoB,EAAD,WACGM,IAAa,SAACpB,EAAA,EAAD,IACnBsB,IAAW,uBAAG,6BACT,wBAAI,cACJ,wBACsB,KAAb,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQc,SACP,uBAAG,8CADJ,OAGCd,QAHD,IAGCA,OAHD,EAGCA,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASzC,EAApB,EAAoBA,GAApB,OACV,2BACE,0BAAI,WAASwC,MACb,yBAAG,IAAEC,MAEL,mBACA,oBALOzC,EADC,QAarB,C","sources":["Util/api.js","components/Loader/Loader.jsx","components/Review/Reviews.styled.js","components/Review/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=66413c0c73bd8d6f9d602d8ba291e1c5';\nconst LANG = '&language=en-US';\n\nexport async function getTrends() {\n  const response = await axios(BASE + 'trending/all/day' + KEY);\n  return response.data.results;\n}\n\nexport async function getDetails(id) {\n  const response = await axios(BASE + 'movie/' + id + KEY + LANG);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(BASE + 'movie/' + id + '/credits' + KEY + LANG);\n  return response.data.cast;\n}\n\nexport async function getReview(id) {\n  const response = await axios(BASE + 'movie/' + id + '/reviews' + KEY + LANG);\n  return response.data.results;\n}\n\nexport async function getMovies(q) {\n  const response = await axios(\n    BASE +\n      'search/movie' +\n      KEY +\n      LANG +\n      '/&query=' +\n      q +\n      '&page=1&include_adult=false'\n  );\n\n  return response.data.results;\n}\n","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"300\"\n      width=\"300\"\n      color=\"#e50914\"\n      wrapperStyle={{ position: 'fixed', top: '30%', left: '40%' }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"#e50914\"\n      innerCircleColor=\"#ffffff\"\n      middleCircleColor=\"#e50914\"\n    />\n  );\n};","import styled from 'styled-components';\nexport const ReviewStyled = styled.div`\n  ul {\n    display: block;\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    margin-bottom: 20px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {Loader} from '../Loader/Loader';\nimport { ReviewStyled } from './Reviews.styled';\nimport { getReview } from '../../Util/api';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [review, setReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const getRewiews = async () => {\n    try{\n\n    getReview(id)?.then(setReview);\n  }  catch (error) {\n    setIsError(error.message);\n    } finally {\n    setIsLoading (false);\n    }\n    };\n    getRewiews();\n    return ()=>{\n      abortController.abort();\n    }\n  }, [id]);\n\n  return (\n    <ReviewStyled>\n      {isLoading && <Loader/>}\n{isError && <p>Something went wrong...</p>}\n      <h3>Reviews:</h3>\n      <ul>\n        {review?.length === 0 ? (\n          <p>We don't have any reviews for this movies</p>\n        ) : (\n          review?.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p> {content}</p>\n\n              <br />\n              <br />\n            </li>\n          ))\n        )}\n      </ul>\n    </ReviewStyled>\n  );\n}\n\nexport default Reviews;\n"],"names":["BASE","KEY","LANG","getTrends","axios","response","data","results","getDetails","id","getCast","cast","getReview","getMovies","q","Loader","height","width","color","wrapperStyle","position","top","left","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ReviewStyled","styled","useParams","useState","review","setReview","isLoading","setIsLoading","isError","setIsError","useEffect","abortController","AbortController","getRewiews","then","error","message","abort","length","map","author","content"],"sourceRoot":""}