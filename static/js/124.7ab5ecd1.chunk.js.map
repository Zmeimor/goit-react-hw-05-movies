{"version":3,"file":"static/js/124.7ab5ecd1.chunk.js","mappings":"+SAEMA,EAAO,gCACPC,EAAM,4CACNC,EAAO,kBAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAMJ,EAAO,mBAAqBC,GADpD,cACCI,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAKR,EAAMC,GADrD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,wFACkBL,EAAAA,EAAAA,GAAMJ,EAAO,SAAWS,EAAK,WAAaR,EAAMC,GADlE,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,wFACkBV,EAAAA,EAAAA,GACrBJ,EACE,eACAC,EACAC,EACA,WACAY,EACA,+BARC,cACCT,EADD,yBAWEA,EAASC,KAAKC,SAXhB,kE,iJCzBMQ,E,OAAaC,GAAAA,IAAH,wJ,2BCoEvB,MA7DA,WACE,IAAQP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,MAAvC,eAAgBK,GAAhB,WAsBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAS,mCAAG,oFAClB,IAEA,WAAAjB,EAAAA,EAAAA,IAAQD,UAAR,SAAamB,KAAKR,EAQjB,CANF,MAAOS,GACNN,EAAWM,EAAMC,QAChB,CAND,QAQEC,QAAQC,IAAI,QACdV,GAAc,EACb,CAXiB,2CAAH,qDAcf,OADAK,IACO,WACLF,EAAgBQ,OACjB,CACF,GAAE,CAACxB,IAIQY,GAAca,EAAA,EAK5B,CAAEf,MAAAA,KACA,UAACJ,EAAD,YACM,wBAAI,WACJ,wBACqB,KAAb,OAALI,QAAK,IAALA,OAAA,EAAAA,EAAOgB,SACN,uBAAG,4CADJ,OAGChB,QAHD,IAGCA,OAHD,EAGCA,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACT,gBAAIC,UAAU,aAAd,WACE,yBAAG,cAAYF,GAAa,WAC5B,yBAAG,SAAOD,GAAQ,WAClB,SAACI,EAAA,EAAD,CAAQC,MAAO,IAAKC,IAAKP,EAAcQ,IAAKP,KAE5C,oBAL8BE,EADvB,QAiBtB,C,4EC/DYN,EAAS,WACpB,OACE,SAAC,KAAD,CACEY,OAAO,MACPH,MAAM,MACNI,MAAM,UACNC,aAAc,CAAEC,SAAU,QAASC,IAAK,MAAOC,KAAM,OACrDC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,WAGvB,C,2HCTD,MALA,YAAsC,IAApBb,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IAAKF,EAAS,EAATA,MAC1B,OACE,gBAAKA,MAAOA,EAAOe,IAAKd,EAJR,kCAI4BA,EAAMe,EAAUd,IAAKA,GAEpE,C","sources":["Util/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/Poster.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=66413c0c73bd8d6f9d602d8ba291e1c5';\nconst LANG = '&language=en-US';\n\nexport async function getTrends() {\n  const response = await axios(BASE + 'trending/all/day' + KEY);\n  return response.data.results;\n}\n\nexport async function getDetails(id) {\n  const response = await axios(BASE + 'movie/' + id + KEY + LANG);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(BASE + 'movie/' + id + '/credits' + KEY + LANG);\n  return response.data.cast;\n}\n\nexport async function getReview(id) {\n  const response = await axios(BASE + 'movie/' + id + '/reviews' + KEY + LANG);\n  return response.data.results;\n}\n\nexport async function getMovies(q) {\n  const response = await axios(\n    BASE +\n      'search/movie' +\n      KEY +\n      LANG +\n      '/&query=' +\n      q +\n      '&page=1&include_adult=false'\n  );\n\n  return response.data.results;\n}\n","import styled from 'styled-components';\nexport const CastStyled = styled.div`\n  h2 {\n  }\n\n  ul {\n    display: block;\n    list-style: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 20px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {Loader} from '../Loader/Loader';\nimport { CastStyled } from './Cast.styled';\n\nimport { getCast } from '../../Util/api';\nimport Poster from '../Poster';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n    const getAktors = async () => {\n    try{\n\n    getCast(id)?.then(setCasts);\n  } \n   catch (error) {\n    setIsError(error.message);\n    }\n     finally {\n      console.log('test')\n    setIsLoading (false);\n    }\n    };\n    getAktors();\n    return ()=>{\n      abortController.abort();\n    }\n  }, [id]);\n\n  return (\n    <CastStyled>\n             {isLoading && <Loader/>}\n\n {isError && <p>Something went wrong...</p>}  \n </CastStyled>,\n\n{ casts } && (\n  <CastStyled>\n        <h2>Cast:</h2>\n        <ul>\n          {casts?.length === 0 ? (\n            <p>We don't have any casts for this movies</p>\n          ) : (\n            casts?.map(({ profile_path, name, character, cast_id }) => (\n              <li className=\"thumb-cast\" key={cast_id}>\n                <p>Character: {character || 'none'}</p>\n                <p>Name: {name || 'none'}</p>\n                <Poster width={100} url={profile_path} alt={name}></Poster>\n\n                <br />\n              </li>\n            ))\n          )}\n        </ul>\n        </CastStyled>\n  \n    )\n  \n  );\n\n}\n\n\n\nexport default Cast;\n","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"300\"\n      width=\"300\"\n      color=\"#e50914\"\n      wrapperStyle={{ position: 'fixed', top: '30%', left: '40%' }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"#e50914\"\n      innerCircleColor=\"#ffffff\"\n      middleCircleColor=\"#e50914\"\n    />\n  );\n};","import portrait from '../portrait.jpeg';\nconst BASE_POSTER = 'https://image.tmdb.org/t/p/w500';\n\nfunction Poster({ url, alt, width }) {\n  return (\n    <img width={width} src={url ? BASE_POSTER + url : portrait} alt={alt} />\n  );\n}\nexport default Poster;\n"],"names":["BASE","KEY","LANG","getTrends","axios","response","data","results","getDetails","id","getCast","cast","getReview","getMovies","q","CastStyled","styled","useParams","useState","casts","setCasts","isLoading","setIsLoading","setIsError","useEffect","abortController","AbortController","getAktors","then","error","message","console","log","abort","Loader","length","map","profile_path","name","character","cast_id","className","Poster","width","url","alt","height","color","wrapperStyle","position","top","left","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","src","portrait"],"sourceRoot":""}